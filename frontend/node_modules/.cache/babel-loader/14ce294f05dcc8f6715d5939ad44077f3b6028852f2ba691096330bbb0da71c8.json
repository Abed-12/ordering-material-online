{"ast":null,"code":"var _jsxFileName = \"D:\\\\A.L\\\\\\u0645\\u0648\\u0627\\u062F \\u062C\\u0627\\u0645\\u0639\\u0629\\\\Project\\\\Project(A)\\\\Code\\\\login-admin\\\\frontend\\\\src\\\\pages\\\\SupplierLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { handleError, handleSuccess } from '../utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: ''\n  });\n\n  // React تستخدم للتنقل بين المسارات في navigation function يستخدم للحصول على React Router من مكتبة Hook هي عباره عن\n  const navigate = useNavigate();\n\n  // نقوم بحفظها user القيم التي يقوم بتدخيلها ال\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value); // console شو بتدخل بعطيك على ال\n    const copyLoginInfo = {\n      ...loginInfo\n    }; // نسخ معلومات تسجيل الدخول\n    copyLoginInfo[name] = value; // تحديث قيمة معينة\n    setLoginInfo(copyLoginInfo); // نقوم بتحديث الحالة باستخدام دالة\n  };\n  const handleLogin = async e => {\n    e.preventDefault(); // يمنع إعادة تحميل الصفحة عند ارسال النموذج\n    const {\n      email,\n      password\n    } = loginInfo;\n    if (!email || !password) {\n      // يتحقق مما اذا كانت القيمة غير موجوده (ان تكون فارغة او غير معرفه)\n      return handleError('email and password are required');\n    }\n\n    // this code sends login information to a local server using a POST request in JSON format.\n    try {\n      const url = `http://localhost:8080//auth/Supplier/login`; // مكان ارسال الطلب\n      const response = await fetch(url, {\n        // HTTP لارسال طلب fetch\n        method: \"POST\",\n        // نوع الطلب\n        headers: {\n          'Content-Type': 'application/json' // نوع البيانات ( هنا بتنسيق json )\n        },\n        body: JSON.stringify(loginInfo) // وارسالها JSON string  الى loginInfo يتم تحويل  \n      });\n      const result = await response.json(); // وتخزينها في متغير JSON لتحويل استجابة الخادم ال\n      const {\n        success,\n        message,\n        jwtToken\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        localStorage.setItem('token', jwtToken); // يقوم بتخزين المعلومات داخل المتصفح ( -Application in browser للتأكد من انه تم الحفظ تذهب الى - key 'token' تحت مفتاح localStorage في jwt هنا خزن قيمة )\n        setTimeout(() => {\n          navigate('/home'); // (function) سيتم تنفيذها بعد انتهاء الوقت\n        }, 1000); // الوقت الذي سيتم الانتظار فيه قبل تنفيذ الدالة، وهو 1000 مللي ثانية، أي 1 ثانية\n      } else if (!success) {\n        handleError(message);\n      }\n      console.log(result);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email...\",\n          value: loginInfo.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your password...\",\n          value: loginInfo.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Does't have an account ?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"mAPoa7VflPO4HOq0E1g15P5FWds=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","handleError","handleSuccess","jsxDEV","_jsxDEV","Login","_s","loginInfo","setLoginInfo","email","password","navigate","handleChange","e","name","value","target","console","log","copyLoginInfo","handleLogin","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","jwtToken","localStorage","setItem","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","type","placeholder","to","_c","$RefreshReg$"],"sources":["D:/A.L/مواد جامعة/Project/Project(A)/Code/login-admin/frontend/src/pages/SupplierLogin.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { handleError, handleSuccess } from '../utils.js';\r\n\r\nfunction Login() {\r\n\r\n    const [loginInfo, setLoginInfo] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    // React تستخدم للتنقل بين المسارات في navigation function يستخدم للحصول على React Router من مكتبة Hook هي عباره عن\r\n    const navigate = useNavigate(); \r\n\r\n    // نقوم بحفظها user القيم التي يقوم بتدخيلها ال\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(name, value); // console شو بتدخل بعطيك على ال\r\n        const copyLoginInfo = { ...loginInfo }; // نسخ معلومات تسجيل الدخول\r\n        copyLoginInfo[name] = value; // تحديث قيمة معينة\r\n        setLoginInfo(copyLoginInfo); // نقوم بتحديث الحالة باستخدام دالة\r\n    }\r\n\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault(); // يمنع إعادة تحميل الصفحة عند ارسال النموذج\r\n        const { email, password } = loginInfo;\r\n        if (!email || !password) { // يتحقق مما اذا كانت القيمة غير موجوده (ان تكون فارغة او غير معرفه)\r\n            return handleError('email and password are required')\r\n        }\r\n\r\n        // this code sends login information to a local server using a POST request in JSON format.\r\n        try {\r\n            const url = `http://localhost:8080//auth/Supplier/login`; // مكان ارسال الطلب\r\n            const response = await fetch(url, { // HTTP لارسال طلب fetch\r\n                method: \"POST\", // نوع الطلب\r\n                headers: { \r\n                    'Content-Type': 'application/json' // نوع البيانات ( هنا بتنسيق json )\r\n                },\r\n                body: JSON.stringify(loginInfo) // وارسالها JSON string  الى loginInfo يتم تحويل  \r\n            });\r\n            const result = await response.json(); // وتخزينها في متغير JSON لتحويل استجابة الخادم ال\r\n            const { success, message, jwtToken } = result;\r\n            if (success) {\r\n                handleSuccess(message);\r\n                localStorage.setItem('token', jwtToken); // يقوم بتخزين المعلومات داخل المتصفح ( -Application in browser للتأكد من انه تم الحفظ تذهب الى - key 'token' تحت مفتاح localStorage في jwt هنا خزن قيمة )\r\n                setTimeout(() => { \r\n                    navigate('/home') // (function) سيتم تنفيذها بعد انتهاء الوقت\r\n                }, 1000) // الوقت الذي سيتم الانتظار فيه قبل تنفيذ الدالة، وهو 1000 مللي ثانية، أي 1 ثانية\r\n            } else if (!success) {\r\n                handleError(message);\r\n            }\r\n            console.log(result);\r\n        } catch (err) {\r\n            handleError(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <div>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='email'\r\n                        name='email'\r\n                        placeholder='Enter your email...'\r\n                        value={loginInfo.email}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Enter your password...'\r\n                        value={loginInfo.password}\r\n                    />\r\n                </div>\r\n                <button type='submit'>Login</button>\r\n                <span>Does't have an account ?\r\n                    <Link to=\"/signup\">Signup</Link>\r\n                </span>\r\n            </form>\r\n            <ToastContainer /> {/* يتم استخدامه لعرض رسائل النجاح أو الخطأ أو أي نوع آخر من الإشعارات التي يحتاج المستخدم لرؤيتها */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}