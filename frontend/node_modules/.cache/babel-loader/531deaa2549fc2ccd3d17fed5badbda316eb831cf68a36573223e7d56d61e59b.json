{"ast":null,"code":"var _jsxFileName = \"D:\\\\A.L\\\\\\u0645\\u0648\\u0627\\u062F \\u062C\\u0627\\u0645\\u0639\\u0629\\\\Project\\\\Project(A)\\\\Code\\\\login-admin\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport { useState } from 'react';\nimport RefrshHandler from './RefrshHandler'; // مكتبة لازمة للتنقل بين الصفحات\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // لادارة التنقل بين الصفحات\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // ام لا authenticated تستخدم لتحديد اذا كان المستخدم تحقق ، false في البداية تكون الحالة\n  s;\n  // login المرسل اليه ،اذا لم يكن كذلك فانه يوجه المستخدم الىelement فانه يعرض ال true اذا كان : isAuthenticated يتحقق اذا كان المساحدم\n  const PrivateRoute = ({\n    element\n  }) => {\n    return isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 40\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(RefrshHandler, {\n      setIsAuthenticated: setIsAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigate","Route","Routes","Login","Home","useState","RefrshHandler","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","s","PrivateRoute","element","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","path","_c","$RefreshReg$"],"sources":["D:/A.L/مواد جامعة/Project/Project(A)/Code/login-admin/frontend/src/App.js"],"sourcesContent":["import { Navigate, Route, Routes } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport { useState } from 'react';\nimport RefrshHandler from './RefrshHandler'; // مكتبة لازمة للتنقل بين الصفحات\n\nfunction App() {\n  // لادارة التنقل بين الصفحات\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // ام لا authenticated تستخدم لتحديد اذا كان المستخدم تحقق ، false في البداية تكون الحالة\n  s\n  // login المرسل اليه ،اذا لم يكن كذلك فانه يوجه المستخدم الىelement فانه يعرض ال true اذا كان : isAuthenticated يتحقق اذا كان المساحدم\n  const PrivateRoute = ({ element }) => {\n    return isAuthenticated ? element : <Navigate to=\"/login\" /> \n  }\n\n  return (\n    <div className=\"App\">\n      {/* useState يتعامل مع تحديث الحاله */}\n      <RefrshHandler setIsAuthenticated={setIsAuthenticated} />\n       {/* هو عنصر يستخدم لتجميع جميع المسارات  */}\n      <Routes> \n        {/* \n          هو عنصر يمثل مسارًا واحدًا في التطبيق. يحتوي على خاصيتين رئيسيتين\n          - path: هو العنصر الذي يحدد المسار الذي سيتم توجيه إليه\n          - element: هو العنصر الذي سيتم عرضه عند الوصول إلى المسار\n        */}\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} /> {/* login page انه عند مطابقة المسار سيتم تحويلك الى  */} \n        <Route path=\"/login\" element={<Login />} /> \n        <Route path=\"/home\" element={<PrivateRoute element={<Home />} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/DQ,CAAC;EACD;EACA,MAAMC,YAAY,GAAGA,CAAC;IAAEC;EAAQ,CAAC,KAAK;IACpC,OAAOJ,eAAe,GAAGI,OAAO,gBAAGP,OAAA,CAACR,QAAQ;MAACgB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7D,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBd,OAAA,CAACF,aAAa;MAACM,kBAAkB,EAAEA;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzDZ,OAAA,CAACN,MAAM;MAAAoB,QAAA,gBAMLd,OAAA,CAACP,KAAK;QAACsB,IAAI,EAAC,GAAG;QAACR,OAAO,eAAEP,OAAA,CAACR,QAAQ;UAACgB,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eACtDZ,OAAA,CAACP,KAAK;QAACsB,IAAI,EAAC,QAAQ;QAACR,OAAO,eAAEP,OAAA,CAACL,KAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CZ,OAAA,CAACP,KAAK;QAACsB,IAAI,EAAC,OAAO;QAACR,OAAO,eAAEP,OAAA,CAACM,YAAY;UAACC,OAAO,eAAEP,OAAA,CAACJ,IAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACV,EAAA,CA1BQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}