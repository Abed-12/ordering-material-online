{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nfunction RefrshHandler({\n  set\n}) {\n  _s();\n  const location = useLocation(); // بسترجع الموقع الحالي ،مسار الصفحه\n  const navigate = useNavigate(); // للتنقل بين المسارات\n\n  useEffect(() => {\n    // يُستخدم لتنفيذ التأثيرات الجانبية، مثل جلب البيانات أو تحديث الحالة بناءً على تغييرات معينة\n    if (localStorage.getItem('token')) {\n      // في التخزين المحلي token يتحقق اذا كان هناك رمز\n      setIsAuthenticated(true); // اذا وجد رمز يحدث الحاله\n      if (location.pathname === '/' || location.pathname === '/login') {\n        // home انقله على ال login اذا كان المستخدم في الصفحه الئيسيه او\n        navigate('/home', {\n          replace: false\n        }); // يسمح للمستخدم بالعودة إلى الصفحة السابقة <-- replace: false \n      }\n    }\n  }, [location, navigate, setIsAuthenticated]); //  يعني أنه سيتم تشغيل هذا التأثير كلما تغيرت أي من هذه القيم\n\n  return null;\n}\n_s(RefrshHandler, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = RefrshHandler;\nexport default RefrshHandler;\nvar _c;\n$RefreshReg$(_c, \"RefrshHandler\");","map":{"version":3,"names":["useEffect","useLocation","useNavigate","RefrshHandler","set","_s","location","navigate","localStorage","getItem","setIsAuthenticated","pathname","replace","_c","$RefreshReg$"],"sources":["D:/A.L/مواد جامعة/Project/Project(A)/Code/login-admin/frontend/src/RefrshHandler.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nfunction RefrshHandler({ set }) {\n    const location = useLocation(); // بسترجع الموقع الحالي ،مسار الصفحه\n    const navigate = useNavigate(); // للتنقل بين المسارات\n\n    useEffect(() => { // يُستخدم لتنفيذ التأثيرات الجانبية، مثل جلب البيانات أو تحديث الحالة بناءً على تغييرات معينة\n        if (localStorage.getItem('token')) { // في التخزين المحلي token يتحقق اذا كان هناك رمز\n            setIsAuthenticated(true); // اذا وجد رمز يحدث الحاله\n            if (location.pathname === '/' ||\n                location.pathname === '/login'\n            ) { // home انقله على ال login اذا كان المستخدم في الصفحه الئيسيه او\n                navigate('/home', { replace: false }); // يسمح للمستخدم بالعودة إلى الصفحة السابقة <-- replace: false \n            }\n        }\n    }, [location, navigate, setIsAuthenticated]) //  يعني أنه سيتم تشغيل هذا التأثير كلما تغيرت أي من هذه القيم\n\n    return (\n        null\n    )\n}\n\nexport default RefrshHandler;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,SAASC,aAAaA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMM,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCF,SAAS,CAAC,MAAM;IAAE;IACd,IAAIQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAAE;MACjCC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC1B,IAAIJ,QAAQ,CAACK,QAAQ,KAAK,GAAG,IACzBL,QAAQ,CAACK,QAAQ,KAAK,QAAQ,EAChC;QAAE;QACAJ,QAAQ,CAAC,OAAO,EAAE;UAAEK,OAAO,EAAE;QAAM,CAAC,CAAC,CAAC,CAAC;MAC3C;IACJ;EACJ,CAAC,EAAE,CAACN,QAAQ,EAAEC,QAAQ,EAAEG,kBAAkB,CAAC,CAAC,EAAC;;EAE7C,OACI,IAAI;AAEZ;AAACL,EAAA,CAlBQF,aAAa;EAAA,QACDF,WAAW,EACXC,WAAW;AAAA;AAAAW,EAAA,GAFvBV,aAAa;AAoBtB,eAAeA,aAAa;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}